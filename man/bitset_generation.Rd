% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PermutationGenerationMethods.R
\name{bitset_generation}
\alias{bitset_generation}
\title{Space efficient unique permutation generation}
\usage{
bitset_generation(original, number_permutations)
}
\arguments{
\item{original}{an integer (0/1 only) or logical vector representing the
statuses of the true observations.}

\item{number_permutations}{integer; desired number of permutations to find.}
}
\value{
A 0/1 matrix with \code{number_permutations} rows and
  \code{length(original)} columns. If there are fewer possible permutations
  than are requested, an error may be thrown.
}
\description{
Called when \code{uniqueperm::get_unique_perms(method = "bitset")}. It is the
most space efficient method in the package, but slower than the others. If
you are attempting to generate a lot of permutations with limited disc space,
use this method.
}
\details{
This method is a helper function not meant for general use. Use
  \code{get_unique_perms} instead, as it has more parameter checking and
  safeguards.

  If you are getting errors while using this method it is likely because this
  method has a C++ implementation. Check to make sure that you have the
  necessary tools to compile C++ code.
}
\examples{
example_states <- c(0,0,0,0,1,1,1,1)
bitset_generation(example_states, 34)
get_unique_perms(example_states, 34, method = "bitset")

example_states <- c(rep(1, 500), rep(0,500))
bitset_generation(example_states, 1000)

}
\author{
PJ Tatlow, Samantha Jensen
}
